{
  "dataset_reader": {
    "type": "quac",
    "num_context_answers": 2,
    "token_indexers": {
      "token_characters": {
        "type": "characters",
        "character_tokenizer": {
          "byte_encoding": "utf-8",
          "start_tokens": [259],
          "end_tokens": [260]
        },
        "min_padding_length": 5
      }
    }
  },
  "train_data_path": "allennlp/tests/fixtures/data/quac_sample.json",
  "validation_data_path": "allennlp/tests/fixtures/data/quac_sample.json",
  "model": {
    "type": "dialog_qa",
    "num_context_answers": 2,
    "marker_embedding_dim": 5,
    "text_field_embedder": {
      "token_embedders": {
        "token_characters": {
          "type": "character_encoding",
          "embedding": {
            "num_embeddings": 262,
            "embedding_dim": 20
          },
          "encoder": {
            "type": "cnn",
            "embedding_dim": 20,
            "num_filters": 10,
            "ngram_filter_sizes": [5]
          },
          "dropout": 0.0
        }
      }
    },
    "phrase_layer": {
      "type": "gru",
      "bidirectional": true,
      "input_size": 20,
      "hidden_size": 5,
      "num_layers": 1
    },
    "residual_encoder": {
      "type": "gru",
      "bidirectional": true,
      "input_size": 10,
      "hidden_size": 5,
      "num_layers": 1
    },
    "span_start_encoder": {
      "type": "gru",
      "bidirectional": true,
      "input_size": 10,
      "hidden_size": 5,
      "num_layers": 1
    },
    "span_end_encoder": {
      "type": "gru",
      "bidirectional": true,
      "input_size": 20,
      "hidden_size": 5,
      "num_layers": 1
    },
    "initializer": [
    ],
    "dropout": 0.3
  },
  "iterator": {
    "type": "bucket",
    "sorting_keys": [["question", "num_fields"], ["passage", "num_tokens"]],
    "batch_size": 10,
    "max_instances_in_memory": 1000
  },
  "validation_iterator": {
    "type": "bucket",
    "sorting_keys": [["question", "num_fields"], ["passage", "num_tokens"]],
    "batch_size": 3,
    "max_instances_in_memory": 1000
  },
  "trainer": {
    "num_epochs": 1,
    "patience": 10,
    "validation_metric": "+f1",
    "learning_rate_scheduler":  {
      "type": "reduce_on_plateau",
      "factor": 0.5,
      "mode": "max",
      "patience": 2
    },
    "optimizer": {
      "type": "adam",
      "betas": [0.9, 0.9]
    }
  }
}
